name: Deployment - Reusable Workflow
run-name: called by ${{ github.actor }}

on: 
  workflow_call:
    secrets:
      k8s-kubeconfig:
        required: true
      mongodb-passwd:
        required: true
    inputs:
      mongodb-uri:
        required: true
        type: string
      kubectl-version:
        description: Provide the required kubectl version
        default: v1.27.0
        required: false
        type: string
      k8s-manifest-dir:
        description: DIrectory containing Kubernetes manifests files
        default: kubernetes/
        required: true
        type: string
      environment:
        description: Provide the Deployment Environment
        default: development
        required: true
        type: string

jobs:
  resuse-deploy:
    environment: 
      name: ${{ inputs.environment }}
      url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    outputs:
      APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        run: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: '${{ inputs.kubectl-version }}'

      - name: Set KubeConfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.k8s-kubeconfig }}
          #context: <context name> 

      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl version --short
          echo ---------------
          kubectl get nodes

      - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
        run: |
            echo "INGRESS_IP=$(kubectl -n ingress-nginx get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> "$GITHUB_ENV"

      - name: Replace Tokens in Manifest files
        uses: cshleiden/replace-tokens@v1
        with:
          tokenPrefix: '_{_'
          tokenSuffix: '_}_'
          files: '["${{ inputs.k8s-manifest-dir }}*.yaml"]'
        env:
          NAMESPACE: ${{ vars.NAMESPACE }}
          REPLICAS: ${{ vars.REPLICAS }}
          IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
          INGRESS_IP: ${{ env.INGRESS_IP }}

      - name: Check Files
        run: |
          cat ${{ inputs.k8s-manifest-dir }}*.yaml

      - name: Create MongoDB Secret
        run: |
          kubectl -n ${{ vars.NAMESPACE }} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
          --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
          --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-passwd }} \
          --save-config \
          --dry-run=client \
          -o yaml | kubectl apply -f -

      - name: Deploy to Dev Env
        run: |
          kubectl apply -f ${{ inputs.k8s-manifest-dir }}

      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: |
            echo "APP_INGRESS_HOST=$(kubectl -n ${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "$GITHUB_OUTPUT"